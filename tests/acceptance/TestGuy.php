<?php
// This class was automatically generated by build task
// You should not change it manually as it will be overwritten on next build
// @codingStandardsIgnoreFile


use \Codeception\Maybe;
use Codeception\Module\Cli;

/**
 * Inherited methods
 * @method void execute($callable)
 * @method void wantToTest($text)
 * @method void wantTo($text)
 * @method void expectTo($prediction)
 * @method void expect($prediction)
 * @method void amGoingTo($argumentation)
 * @method void am($role)
 * @method void lookForwardTo($achieveValue)
 * @method void offsetGet($offset)
 * @method void offsetSet($offset, $value)
 * @method void offsetExists($offset)
 * @method void offsetUnset($offset)
*/

class TestGuy extends \Codeception\AbstractGuy
{
    
    /**
     * This method is generated.
     * Documentation taken from corresponding module.
     * ----------------------------------------------
     *
     * Executes a shell command
     *
     * @param $command
     * @see Codeception\Module\Cli::runShellCommand()
     * @return \Codeception\Maybe
     */
    public function runShellCommand($command) {
        $this->scenario->addStep(new \Codeception\Step\Action('runShellCommand', func_get_args()));
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * This method is generated.
     * Documentation taken from corresponding module.
     * ----------------------------------------------
     *
     * Checks that output from last executed command contains text
     *
     * @param $text
    * Conditional Assertion: Test won't be stopped on fail
     * @see Codeception\Module\Cli::seeInShellOutput()
     * @return \Codeception\Maybe
     */
    public function canSeeInShellOutput($text) {
        $this->scenario->addStep(new \Codeception\Step\ConditionalAssertion('seeInShellOutput', func_get_args()));
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }
    /**
     * This method is generated.
     * Documentation taken from corresponding module.
     * ----------------------------------------------
     *
     * Checks that output from last executed command contains text
     *
     * @param $text
     * @see Codeception\Module\Cli::seeInShellOutput()
     * @return \Codeception\Maybe
     */
    public function seeInShellOutput($text) {
        $this->scenario->addStep(new \Codeception\Step\Assertion('seeInShellOutput', func_get_args()));
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * This method is generated.
     * Documentation taken from corresponding module.
     * ----------------------------------------------
     *
     * Checks that output from latest command doesn't contain text
     *
     * @param $text
     *
    * Conditional Assertion: Test won't be stopped on fail
     * @see Codeception\Module\Cli::dontSeeInShellOutput()
     * @return \Codeception\Maybe
     */
    public function cantSeeInShellOutput($text) {
        $this->scenario->addStep(new \Codeception\Step\ConditionalAssertion('dontSeeInShellOutput', func_get_args()));
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }
    /**
     * This method is generated.
     * Documentation taken from corresponding module.
     * ----------------------------------------------
     *
     * Checks that output from latest command doesn't contain text
     *
     * @param $text
     *
     * @see Codeception\Module\Cli::dontSeeInShellOutput()
     * @return \Codeception\Maybe
     */
    public function dontSeeInShellOutput($text) {
        $this->scenario->addStep(new \Codeception\Step\Assertion('dontSeeInShellOutput', func_get_args()));
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * This method is generated.
     * Documentation taken from corresponding module.
     * ----------------------------------------------
     *
     *
    * Conditional Assertion: Test won't be stopped on fail
     * @see Codeception\Module\Cli::seeShellOutputMatches()
     * @return \Codeception\Maybe
     */
    public function canSeeShellOutputMatches($regex) {
        $this->scenario->addStep(new \Codeception\Step\ConditionalAssertion('seeShellOutputMatches', func_get_args()));
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }
    /**
     * This method is generated.
     * Documentation taken from corresponding module.
     * ----------------------------------------------
     *
     *
     * @see Codeception\Module\Cli::seeShellOutputMatches()
     * @return \Codeception\Maybe
     */
    public function seeShellOutputMatches($regex) {
        $this->scenario->addStep(new \Codeception\Step\Assertion('seeShellOutputMatches', func_get_args()));
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * This method is generated.
     * Documentation taken from corresponding module.
     * ----------------------------------------------
     *
     *
     * @see Codeception\Module::getName()
     * @return \Codeception\Maybe
     */
    public function getName() {
        $this->scenario->addStep(new \Codeception\Step\Action('getName', func_get_args()));
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }
}

